#!/usr/bin/env bash

docker_directories=( server client-admin client-participation client-report )
yaml_files=( development.yaml schema.yaml )
js_files=( config.js )
config_directory=config
repo_egrep="(polisServer.git|polis.git).*(fetch)"
repo_root_directory=`git rev-parse --show-toplevel`

if ! git remote -v | grep -E $repo_egrep; then
    echo "Error! This script must be run in a 'polis' directory."
    echo "Please edit ${0} if you believe you should not be getting this error."
    exit 1
fi

# for automatic verification that `client-report/config/config.js` and `config/config.js`
# are consistent, use tail +4 client-report/config/config.js  | diff config/config.js -

cd $repo_root_directory

echo "Copying config files from '${config_directory}' to (${docker_directories[*]})"

for directory in "${docker_directories[@]}"
do
    :
    for file in "${yaml_files[@]}"
    do
       : 
       echo "# PLEASE DO NOT EDIT THIS FILE" \
            > ${directory}/${config_directory}/${file}
       echo "# Please edit files in the top level config directory instead" \
            >> ${directory}/${config_directory}/${file}       
       echo "#" >> ${directory}/${config_directory}/${file}
       cat ${config_directory}/${file} >> ${directory}/${config_directory}/${file}
    done
    for file in "${js_files[@]}"
    do
       : 
       echo "// PLEASE DO NOT EDIT THIS FILE" \
            > ${directory}/${config_directory}/${file}
       echo "// Please edit files in the top level config directory instead" \
            >> ${directory}/${config_directory}/${file}
       echo "//" >> ${directory}/${config_directory}/${file}
       cat ${config_directory}/${file} >> ${directory}/${config_directory}/${file}
    done
done
