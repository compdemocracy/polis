# @TTD: sort networks/volumes consistently (network first)

# before running docker-compose up for the first time,
# either do a pull:
# docker-compose pull
# or do a build:
# GIT_HASH $(git rev-parse --short HEAD) docker-compose up --detach

# subsequently you should only need to run:
# docker-compose up --detach

# force a full re-build with no cache from previous builds:
# docker-compose build --build-arg GIT_HASH $(git rev-parse --short HEAD) --parallel --no-cache

# to stop:
# docker-compose down

## TODO: add config container

version: "3.1"

services:
  server:
    container_name: polis-server
    env_file: ./server/docker-dev.env
    environment:
      - POLIS_ROOT=/app/
    image: compdem/polis-server:${TAG}
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      - "postgres"
      - "file-server"
    networks:
      - "polis-net"
    volumes:
      - "config:/app/config"
    ports:
      - "5000:5000"

  math:
    container_name: polis-math
    env_file: ./math/docker-dev.env
    image: compdem/polis-math:${TAG}
    depends_on:
      - "postgres"
    build:
      context: ./math
    volumes:
      - "config:/config"
    networks:
      - "polis-net"

  postgres:
    container_name: polis-postgres
    env_file: ./server/docker-db-dev.env
    image: compdem/polis-postgres:${TAG}
    depends_on:
      - "config"
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile-db
    networks:
      - "polis-net"
    volumes:
      - "backups:/backups"
      - "config:/config"
      - "postgres:/var/lib/postgresql/data"

  nginx-proxy:
    container_name: polis-nginx-proxy
    image: compdem/polis-nginx-proxy:${TAG}
    build:
      context: ./file-server
      dockerfile: nginx.Dockerfile
    environment:
      - TAG
    depends_on:
      - "server"
    networks:
      - "polis-net"
    volumes:
      - "config:/config"
    ports:
      - "80:80"
      - "443:443"

  file-server:
    container_name: polis-file-server
    image: compdem/polis-file-server:${TAG}
    build:
      context: ./file-server
      dockerfile: Dockerfile
    depends_on:
      - "client-participation"
      - "client-admin"
      - "client-report"
    networks:
      - "polis-net"
    volumes:
      - "config:/config"
    ports:
      - "8080:8080"

  client-participation:
    container_name: polis-client-participation
    environment:
      - POLIS_ROOT=/app/
    image: compdem/polis-client-participation:${TAG}
    depends_on:
      - "config"
    build:
      context: ./client-participation
      args:
        GIT_HASH: "${GIT_HASH}"
    volumes:
      - "config:/app/config"

  client-admin:
    container_name: polis-client-admin
    environment:
      - POLIS_ROOT=/app/
    image: compdem/polis-client-admin:${TAG}
    depends_on:
      - "config"
    build:
      context: ./client-admin
      args:
        GIT_HASH: "${GIT_HASH}"
    volumes:
      - "config:/app/config"

  client-report:
    container_name: polis-client-report
    environment:
      - POLIS_ROOT=/app/
    image: compdem/polis-client-report:${TAG}
    depends_on:
      - "config"
    build:
      context: ./client-report
      args:
        GIT_HASH: "${GIT_HASH}"
    volumes:
      - "config:/app/config"

  # maildev:
  #   image: maildev/maildev:1.1.0
  #   networks:
  #     - "polis-net"
  #   ports:
  #     # User interface
  #     - "1080:80"
  #     # SMTP port
  #     - "25:25"

  config:
    build:
      context: ./config
      dockerfile: Dockerfile
    volumes:
      - "config:/config"

networks:
  polis-net:

volumes:
  backups:
  postgres:
  config:
    # We hardcode this machine name so it won't vary depending on git dir name.
    name: polis_config
