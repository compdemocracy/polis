# before running docker-compose up for the first time,
# either do a pull:
# docker-compose pull
# or do a build:
# GIT_HASH $(git rev-parse --short HEAD) docker-compose up --detach

# subsequently you should only need to run:
# docker-compose up --detach

# force a full re-build with no cache from previous builds:
# docker-compose build --build-arg GIT_HASH $(git rev-parse --short HEAD) --parallel --no-cache

# to stop:
# docker-compose down

version: "3.1"

services:
  server:
    container_name: polis-server
    env_file: ./.universal.env
    build:
      context: ./server
      dockerfile: Dockerfile
    depends_on:
      #- "postgres"
      - "file-server"
    ports:
      - "5000:5000"
      - "9229:9229"
    environment:
      - PORT=5000
      - HSTS=off
      - VIRTUAL_HOST=polis-test.demos.co.uk,www.polis-test.demos.co.uk
      - VIRTUAL_PORT=5000
      - NODE_ENV=development
      - CERT_NAME=polis-selfsigned

  file-server:
    container_name: polis-file-server
    build:
      context: ./file-server
      dockerfile: Dockerfile
    depends_on:
      - "client-participation"
      - "client-admin"
      - "client-report"
    ports:
      - "8080:8080"

  client-participation:
    container_name: polis-client-participation
    image: polisdemo/client-participation:dev
    build:
      context: ./client-participation
      args:
        GIT_HASH: "${GIT_HASH}"

  client-admin:
    container_name: polis-client-admin
    env_file: ./.universal.env
    image: polisdemo/client-admin:dev
    build:
      context: ./client-admin
      args:
        GIT_HASH: "${GIT_HASH}"

  client-report:
    container_name: polis-client-report
    env_file: ./.universal.env
    image: polisdemo/client-report:dev
    build:
      context: ./client-report
      args:
        GIT_HASH: "${GIT_HASH}"

volumes:
  backups:
